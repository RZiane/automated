rule advneg {
	pattern {
    ADVNEG [form="ne"|"pas"|"n’"|"point"|"jamais"|"jam.*" , upos=ADV];
    e: X -[!advneg]-> ADVNEG;
    }
    commands {
    e.advneg = Yes;
    }
}

rule explsubj {
	pattern {
    EXPLSUBJ [form="il"|"Il"|"i"];
    * -[expl]-> EXPLSUBJ;
    e: X -[!explsubj]-> EXPLSUBJ;
    }
    commands {
    e.explsubj = Yes;
    }
}

rule base (lex from "nouns.lex"){
  pattern {
    M1 [upos=VERB];
    M2 [upos=AUX];
    e: M1 -[aux]-> M2 ;
  }

  without {
    M2 [form=lex.form];
  }

  commands { 

  	M2.upos = VERB;
    del_edge e; % delete the edge
    add_edge M2 -[xcomp]-> M1; % add the inverse edge
    
    % and then shift the in-edges pointing to M1 and redirect to M2
    shift_in M1 ==> M2;
    
    % facultative : if you also want to redirect all out-edges (starting from M1) to M2 (will start from M2), use the following line :
    shift_out M1 =[1<>obj|iobj|obl|ccomp|xcomp|advneg, !explsubj]=> M2;
	}
}
#BEGIN lex
form
%--------------
A
Ai
As
Avez
Avoir
Avoit
Avés
Ert
Est
Estera
Estoit
Eüsiez
Eüst
Fu
Furent
Fust
Ont
Orent
Ot
Ourent
Out
Ra
Sera
Seras
Seroie
Sont
a
ad
ai
aie
aient
aies
aiez
aions
ait
arai
ariis
ariiés
ariés
aroie
aroient
aron
arés
as
at
aud
aurent
auret
aut
aveie
aveient
aveir
aveit
avet
avez
aviemes
avions
aviés
avoie
avoient
avoies
avoir
avoit
avomes
avon
avons
avot
avoyent
avra
avrai
avras
avrat
avreit
avrez
avroie
avroient
avroit
avroiz
avront
avrum
avrunt
avum
avums
avuns
avés
avïez
ay
aye
ayent
ayons
ei
erent
ermes
ert
es
est
este
esteie
esteroie
esteroit
estes
estoie
estoient
estoies
estoit
estre
esté
eurent
eus
eusciés
eusse
eussent
eusses
eussiez
eust
eut
eüs
eüse
eüsse
eüssent
eüssiez
eüst
eüstes
feust
fu
fud
fui
fuissent
fumes
furent
furet
fus
fusent
fussant
fusse
fussent
fusses
fussiens
fussiez
fust
fustes
fut
fúd
ier
iert
ies
oi
ont
orent
ot
ourent
out
oüs
oüsse
oüssent
oüsses
oüst
oüsum
ra
rad
rait
raroient
ravoient
ravoit
refu
rest
ront
rot
seie
seient
seiez
seit
sera
serai
serat
serez
serions
seroient
seroit
seroiz
seront
serreit
seré
soiez
soit
soiés
somes
sommes
sont
sot
sui
suis
sunt
surum
suys
un
unt
ái
ávum
áí
ért
óut
únt
#END

rule attrib {
  pattern {
    M2 [upos=AUX];
    e: M1 -[aux]-> M2 ;
    e2: M1 -[cop]-> COP;
  }

  without {
    M2 [form=lex2.form];
  }

  commands { 
  	M2.upos = VERB;
    del_edge e; % delete the edge
    add_edge M2 -[xcomp]-> M1; % add the inverse edge
    
    % and then shift the in-edges pointing to M1 and redirect to M2
    shift_in M1 ==> M2;
    
    % facultative : if you also want to redirect all out-edges (starting from M1) to M2 (will start from M2), use the following line :
    shift_out M1 =[1<>det|cop|amod|nmod|appos|nummod|acl]=> M2;
	}
}
#BEGIN lex2
form
%--------------
A
Ai
As
Avez
Avoir
Avoit
Avés
Ert
Est
Estera
Estoit
Eüsiez
Eüst
Fu
Furent
Fust
Ont
Orent
Ot
Ourent
Out
Ra
Sera
Seras
Seroie
Sont
a
ad
ai
aie
aient
aies
aiez
aions
ait
arai
ariis
ariiés
ariés
aroie
aroient
aron
arés
as
at
aud
aurent
auret
aut
aveie
aveient
aveir
aveit
avet
avez
aviemes
avions
aviés
avoie
avoient
avoies
avoir
avoit
avomes
avon
avons
avot
avoyent
avra
avrai
avras
avrat
avreit
avrez
avroie
avroient
avroit
avroiz
avront
avrum
avrunt
avum
avums
avuns
avés
avïez
ay
aye
ayent
ayons
ei
erent
ermes
ert
es
est
este
esteie
esteroie
esteroit
estes
estoie
estoient
estoies
estoit
estre
esté
eurent
eus
eusciés
eusse
eussent
eusses
eussiez
eust
eut
eüs
eüse
eüsse
eüssent
eüssiez
eüst
eüstes
feust
fu
fud
fui
fuissent
fumes
furent
furet
fus
fusent
fussant
fusse
fussent
fusses
fussiens
fussiez
fust
fustes
fut
fúd
ier
iert
ies
oi
ont
orent
ot
ourent
out
oüs
oüsse
oüssent
oüsses
oüst
oüsum
ra
rad
rait
raroient
ravoient
ravoit
refu
rest
ront
rot
seie
seient
seiez
seit
sera
serai
serat
serez
serions
seroient
seroit
seroiz
seront
serreit
seré
soiez
soit
soiés
somes
sommes
sont
sot
sui
suis
sunt
surum
suys
un
unt
ái
ávum
áí
ért
óut
únt
#END

rule del_advneg_attrib {
	pattern {
    e: X -[advneg=Yes]-> ADVNEG;
    }
    commands {
    del_edge e;
    add_edge X -[advmod]-> ADVNEG;
    }
}

rule del_explsubj_attrib {
	pattern {
    e: X -[explsubj=Yes]-> EXPLSUBJ;
    }
    commands {
    del_edge e;
    add_edge X -[expl]-> EXPLSUBJ;
    }
}

strat main {
  Seq (
    Onf (advneg),
    Onf (explsubj),
    Onf (base),
    Onf (attrib),
    Onf (del_advneg_attrib),
    Onf (del_explsubj_attrib)
    )
  }